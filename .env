# Environm# Neon Database URL - use a URL exata do seu painel Neon
# Você precisa pegar a URL real do seu painel do Neon
# DATABASE_URL="postgresql://neondb_owner:SUA_SENHA_AQUI@ep-shiny-dust-a08niq93-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require"

# Para usar temporariamente o SQLite até configurar o Neon
DATABASE_URL="file:./dev.db"riables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# The following `prisma+postgres` URL is similar to the URL produced by running a local Prisma Postgres 
# server with the `prisma dev` CLI command, when not choosing any non-default ports or settings. The API key, unlike the 
# one found in a remote Prisma Postgres URL, does not contain any sensitive information.

# Neon Database URL - keep Neon credentials secure: do not expose them to client-side code
DATABASE_URL="postgresql://neondb_owner:npg_5L7jzgafIcYJ@ep-shiny-dust-aenigq93.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require"

# Para usar temporariamente o SQLite até configurar o Neon
# DATABASE_URL="file:./dev.db"

# Backup local database for development
# DATABASE_URL="file:./dev.db"

# NextAuth.js
NEXTAUTH_SECRET="your-secret-key-here-change-in-production"
NEXTAUTH_URL="http://localhost:3000"